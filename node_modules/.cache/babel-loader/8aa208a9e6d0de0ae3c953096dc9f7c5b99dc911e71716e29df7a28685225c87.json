{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abinash Giri\\\\Desktop\\\\AI-botforjay\\\\src\\\\context\\\\IssueContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IssueContext = /*#__PURE__*/createContext();\nexport const useIssues = () => {\n  _s();\n  const context = useContext(IssueContext);\n  if (!context) {\n    throw new Error('useIssues must be used within an IssueProvider');\n  }\n  return context;\n};\n_s(useIssues, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const IssueProvider = ({\n  children\n}) => {\n  _s2();\n  const {\n    user\n  } = useAuth();\n  const [issues, setIssues] = useState([{\n    id: 1,\n    category: 'electricity',\n    title: 'Power Outage in Library',\n    location: 'Library, Floor 2',\n    description: 'Complete power outage affecting study areas and computer stations.',\n    status: 'pending',\n    date: '2024-01-15',\n    priority: 'high',\n    icon: 'âš¡',\n    reportedBy: 'user-001',\n    reporterName: 'John Doe'\n  }, {\n    id: 2,\n    category: 'wifi',\n    title: 'Slow WiFi in Dormitory',\n    location: 'Dormitory Building A',\n    description: 'Extremely slow internet connection in rooms 101-120.',\n    status: 'in-progress',\n    date: '2024-01-14',\n    priority: 'medium',\n    icon: 'ðŸ“¶',\n    reportedBy: 'user-002',\n    reporterName: 'Jane Smith'\n  }, {\n    id: 3,\n    category: 'water',\n    title: 'Leaking Faucet',\n    location: 'Science Building, Lab 3',\n    description: 'Faucet in the chemistry lab is leaking continuously.',\n    status: 'resolved',\n    date: '2024-01-13',\n    priority: 'low',\n    icon: 'ðŸ’§',\n    reportedBy: 'user-001',\n    reporterName: 'John Doe'\n  }, {\n    id: 4,\n    category: 'cleanliness',\n    title: 'Dirty Cafeteria Tables',\n    location: 'Student Center Cafeteria',\n    description: 'Multiple tables have food stains and need cleaning.',\n    status: 'pending',\n    date: '2024-01-15',\n    priority: 'medium',\n    icon: 'ðŸ§¹',\n    reportedBy: 'user-003',\n    reporterName: 'Mike Johnson'\n  }, {\n    id: 5,\n    category: 'other',\n    title: 'Broken Chair',\n    location: 'Lecture Hall 101',\n    description: 'One of the chairs in the front row is broken and unsafe.',\n    status: 'in-progress',\n    date: '2024-01-12',\n    priority: 'high',\n    icon: 'ðŸ”§',\n    reportedBy: 'user-001',\n    reporterName: 'John Doe'\n  }, {\n    id: 6,\n    category: 'electricity',\n    title: 'Faulty Light Switch',\n    location: 'Engineering Building, Room 205',\n    description: 'Light switch not working properly, lights flicker when turned on.',\n    status: 'resolved',\n    date: '2024-01-11',\n    priority: 'low',\n    icon: 'âš¡',\n    reportedBy: 'user-004',\n    reporterName: 'Sarah Wilson'\n  }]);\n\n  // Load issues from localStorage on mount\n  useEffect(() => {\n    const storedIssues = localStorage.getItem('issues');\n    if (storedIssues) {\n      setIssues(JSON.parse(storedIssues));\n    }\n  }, []);\n\n  // Save issues to localStorage whenever issues change\n  useEffect(() => {\n    localStorage.setItem('issues', JSON.stringify(issues));\n  }, [issues]);\n  const addIssue = issueData => {\n    const newIssue = {\n      id: Date.now(),\n      // Simple ID generation\n      ...issueData,\n      status: 'pending',\n      date: new Date().toISOString().split('T')[0],\n      priority: 'medium',\n      reportedBy: (user === null || user === void 0 ? void 0 : user.id) || 'user-001',\n      reporterName: (user === null || user === void 0 ? void 0 : user.name) || 'Anonymous User'\n    };\n    setIssues(prevIssues => [newIssue, ...prevIssues]);\n    return newIssue;\n  };\n  const updateIssueStatus = (issueId, newStatus) => {\n    setIssues(prevIssues => prevIssues.map(issue => issue.id === issueId ? {\n      ...issue,\n      status: newStatus\n    } : issue));\n  };\n  const deleteIssue = issueId => {\n    setIssues(prevIssues => prevIssues.filter(issue => issue.id !== issueId));\n  };\n  const getUserIssues = userId => {\n    return issues.filter(issue => issue.reportedBy === userId);\n  };\n  const getAllIssues = () => {\n    return issues;\n  };\n  const value = {\n    issues,\n    addIssue,\n    updateIssueStatus,\n    deleteIssue,\n    getUserIssues,\n    getAllIssues\n  };\n  return /*#__PURE__*/_jsxDEV(IssueContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n_s2(IssueProvider, \"qfJpyHy5d0XdLqTNDu1kcRqkXVw=\", false, function () {\n  return [useAuth];\n});\n_c = IssueProvider;\nvar _c;\n$RefreshReg$(_c, \"IssueProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useAuth","jsxDEV","_jsxDEV","IssueContext","useIssues","_s","context","Error","IssueProvider","children","_s2","user","issues","setIssues","id","category","title","location","description","status","date","priority","icon","reportedBy","reporterName","storedIssues","localStorage","getItem","JSON","parse","setItem","stringify","addIssue","issueData","newIssue","Date","now","toISOString","split","name","prevIssues","updateIssueStatus","issueId","newStatus","map","issue","deleteIssue","filter","getUserIssues","userId","getAllIssues","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Abinash Giri/Desktop/AI-botforjay/src/context/IssueContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { useAuth } from './AuthContext';\r\n\r\nconst IssueContext = createContext();\r\n\r\nexport const useIssues = () => {\r\n  const context = useContext(IssueContext);\r\n  if (!context) {\r\n    throw new Error('useIssues must be used within an IssueProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const IssueProvider = ({ children }) => {\r\n  const { user } = useAuth();\r\n  const [issues, setIssues] = useState([\r\n    {\r\n      id: 1,\r\n      category: 'electricity',\r\n      title: 'Power Outage in Library',\r\n      location: 'Library, Floor 2',\r\n      description: 'Complete power outage affecting study areas and computer stations.',\r\n      status: 'pending',\r\n      date: '2024-01-15',\r\n      priority: 'high',\r\n      icon: 'âš¡',\r\n      reportedBy: 'user-001',\r\n      reporterName: 'John Doe'\r\n    },\r\n    {\r\n      id: 2,\r\n      category: 'wifi',\r\n      title: 'Slow WiFi in Dormitory',\r\n      location: 'Dormitory Building A',\r\n      description: 'Extremely slow internet connection in rooms 101-120.',\r\n      status: 'in-progress',\r\n      date: '2024-01-14',\r\n      priority: 'medium',\r\n      icon: 'ðŸ“¶',\r\n      reportedBy: 'user-002',\r\n      reporterName: 'Jane Smith'\r\n    },\r\n    {\r\n      id: 3,\r\n      category: 'water',\r\n      title: 'Leaking Faucet',\r\n      location: 'Science Building, Lab 3',\r\n      description: 'Faucet in the chemistry lab is leaking continuously.',\r\n      status: 'resolved',\r\n      date: '2024-01-13',\r\n      priority: 'low',\r\n      icon: 'ðŸ’§',\r\n      reportedBy: 'user-001',\r\n      reporterName: 'John Doe'\r\n    },\r\n    {\r\n      id: 4,\r\n      category: 'cleanliness',\r\n      title: 'Dirty Cafeteria Tables',\r\n      location: 'Student Center Cafeteria',\r\n      description: 'Multiple tables have food stains and need cleaning.',\r\n      status: 'pending',\r\n      date: '2024-01-15',\r\n      priority: 'medium',\r\n      icon: 'ðŸ§¹',\r\n      reportedBy: 'user-003',\r\n      reporterName: 'Mike Johnson'\r\n    },\r\n    {\r\n      id: 5,\r\n      category: 'other',\r\n      title: 'Broken Chair',\r\n      location: 'Lecture Hall 101',\r\n      description: 'One of the chairs in the front row is broken and unsafe.',\r\n      status: 'in-progress',\r\n      date: '2024-01-12',\r\n      priority: 'high',\r\n      icon: 'ðŸ”§',\r\n      reportedBy: 'user-001',\r\n      reporterName: 'John Doe'\r\n    },\r\n    {\r\n      id: 6,\r\n      category: 'electricity',\r\n      title: 'Faulty Light Switch',\r\n      location: 'Engineering Building, Room 205',\r\n      description: 'Light switch not working properly, lights flicker when turned on.',\r\n      status: 'resolved',\r\n      date: '2024-01-11',\r\n      priority: 'low',\r\n      icon: 'âš¡',\r\n      reportedBy: 'user-004',\r\n      reporterName: 'Sarah Wilson'\r\n    }\r\n  ]);\r\n\r\n  // Load issues from localStorage on mount\r\n  useEffect(() => {\r\n    const storedIssues = localStorage.getItem('issues');\r\n    if (storedIssues) {\r\n      setIssues(JSON.parse(storedIssues));\r\n    }\r\n  }, []);\r\n\r\n  // Save issues to localStorage whenever issues change\r\n  useEffect(() => {\r\n    localStorage.setItem('issues', JSON.stringify(issues));\r\n  }, [issues]);\r\n\r\n  const addIssue = (issueData) => {\r\n    const newIssue = {\r\n      id: Date.now(), // Simple ID generation\r\n      ...issueData,\r\n      status: 'pending',\r\n      date: new Date().toISOString().split('T')[0],\r\n      priority: 'medium',\r\n      reportedBy: user?.id || 'user-001',\r\n      reporterName: user?.name || 'Anonymous User'\r\n    };\r\n    \r\n    setIssues(prevIssues => [newIssue, ...prevIssues]);\r\n    return newIssue;\r\n  };\r\n\r\n  const updateIssueStatus = (issueId, newStatus) => {\r\n    setIssues(prevIssues =>\r\n      prevIssues.map(issue =>\r\n        issue.id === issueId ? { ...issue, status: newStatus } : issue\r\n      )\r\n    );\r\n  };\r\n\r\n  const deleteIssue = (issueId) => {\r\n    setIssues(prevIssues => prevIssues.filter(issue => issue.id !== issueId));\r\n  };\r\n\r\n  const getUserIssues = (userId) => {\r\n    return issues.filter(issue => issue.reportedBy === userId);\r\n  };\r\n\r\n  const getAllIssues = () => {\r\n    return issues;\r\n  };\r\n\r\n  const value = {\r\n    issues,\r\n    addIssue,\r\n    updateIssueStatus,\r\n    deleteIssue,\r\n    getUserIssues,\r\n    getAllIssues\r\n  };\r\n\r\n  return (\r\n    <IssueContext.Provider value={value}>\r\n      {children}\r\n    </IssueContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}